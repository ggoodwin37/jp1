// misc

- core, low pri: handling of sprite and preset constants is pretty ugly. should make this more dynamic and compact.

- edit: shouldn't go to smallest visual grid size unless draw brush is that size.
- edit: new level should show props immediately so I can type in level name. search "TODO: edit new level"
- edit: when changing size of edit block brush, should have -4/+4 buttons in addition (or just make existing ones do +/- 4)

- crumbles: off by one y?

- revisit how groups are instantiated/added to world and er.

- drawing spriteStateMaps: base case is done, need to do edit support (tiling?) and consider handling non-integral case in play.

- button v1?

- put it on new iPad (maybe? I sort of like the old one keeping me honest).

- need a physics constants pass once most stuff is working
- tweak air friction to less

- world layers

- fix sprite tile edge artifacts (or decide to redo all art so we can be at native resolution during regular play)
  - I think this just means blending has to stay off. then you have the jaggies, which can potentially be mitigated if our block size happens to be integral with the physical display. even if it is, do we have to worry about sub-pixel offsets messing with us?

- z-index? can we use depth buffer? do layers cover this?


// future

- implement the restricted rect version of EWorldView drawToContext for better perf while drawing blocks. (still relevant?) (pretty sure I did this already)

- core, low pri: handling of sprite and preset constants is pretty ugly. should make this more dynamic and compact.


// edit. claim: investing in edit makes play exponentially more awesome.

- TODO: putting these way down here makes them lower priority but they are not so, should interleave.

- a better drag, part 2: I miss being able to drag-and-draw lots of blocks (removed this functionality when broke the unit grid). can we bring it back somehow? it's nice to have draw-on-touchEnd with cursor so you know what you're placing. but maybe if they touch and drag on an existing block of same preset, we enter special mode where we continuously drop blocks of that size as soon as we can fit them. there's some subtlety here around where the block is anchored to the finger touch point and how this interacts with free space check, probably simplifyable. maybe this isn't worth it and you just need to get used to the existing behavior.

- cut/copy/paste. for copy, you've been picturing this intelligent edge trimming algorithm, but we can probably do without that for now and just trust author to make convenient copies (which handles 95% of actual use cases). i.e. drop blocks not entirely in copy region.

- would be cool to have like 3 to 4 draw slots so I can rapidly choose between several presets, can be pre-pop'd too.

- undo stack
