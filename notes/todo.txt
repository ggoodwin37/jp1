// misc

- lift: pipe presetblock size down to autolift actor so we can have variable sized lifts.

- test level: tower of babel. need to get the "distance from origin" thing figured out.
  - why can't we handle negatives in edit anyways? pretty sure play is fine. maybe we can replace the key-gen-requires-positive-coord thing (is that what's happening)? can use space partition collision detection and allow overlapping blocks :)

- a hitless group connector. hitless blocks in general (background)

- beams

- sanity check: does dpad still listen during edit? seems like dpad is offcenter after editing, or did my hands just shift.

- fix death state. gibs are weird, camera sometimes flies away, and actor's original block appears to still be hit testing (or did I fix that already?)

- revisit how groups are instantiated/added to world and er.

- drawing spriteStateMaps: base case is done, need to do edit support (tiling?) and consider handling non-integral case in play.

- button v1? also need horizontal button kits.

- need a physics constants pass once most stuff is working
- tweak air friction to less (still valid?)

- world layers

- z-index? can we use depth buffer? do layers cover this?


// future

- implement the restricted rect version of EWorldView drawToContext for better perf while drawing blocks.
  - you already are culling to view rect in the main grid document drawer, but I think there's an optional separate version of the draw method that only updates a certain rect. then we can invalidate just specific parts of the screen when drawing/erasing, should make editing snappier (until the user pans/zooms).

- core, low pri: handling of sprite and preset constants is pretty ugly. should make this more dynamic and compact.

// edit. claim: investing in edit makes play exponentially more awesome.

- TODO: putting these way down here makes them lower priority but they are not so, should interleave.

- cut/copy/paste. for copy, you've been picturing this intelligent edge trimming algorithm, but we can probably do without that for now and just trust author to make convenient copies (which handles 95% of actual use cases). i.e. drop blocks not entirely in copy region.

- would be cool to have like 3 to 4 draw slots so I can rapidly choose between several presets, can be pre-pop'd too.

- undo stack
